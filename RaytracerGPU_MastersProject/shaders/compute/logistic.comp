#version 450

layout (binding = 0) uniform ParameterUBO {
	vec4 pixelColor;
	float iteration;
	float width;
	float height;
} ubo;

struct Logistic {
	float x;
	float r;
};

layout(std430, binding = 1) buffer LogisticSSBOIn {
	Logistic logisticsIn[ ];
};

layout(binding = 2, rgba8) uniform writeonly image2D outputImage;

layout(local_size_x = 1024, local_size_y = 1, local_size_z = 1) in;

void main() {
	uint index = gl_GlobalInvocationID.x;

	Logistic curr = logisticsIn[index];

	logisticsIn[index].r = curr.r;
	logisticsIn[index].x = curr.x * curr.r * (1.0f - curr.x);

	int xCoord = int(((logisticsIn[index].r - 3.5) / 0.5) * ubo.width); // 3.5-4 range
	int yCoord = int(((1 - logisticsIn[index].x) / 1.0) * ubo.height); // 0-1 range but need to turn it upside down as well

	imageStore(outputImage, ivec2(xCoord, yCoord), ubo.pixelColor);
}